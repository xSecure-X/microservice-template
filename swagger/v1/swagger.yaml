swagger: "2.0"
info:
  version: "1.0.0"
  title: "Users API"
  description: "API for managing users"

paths:
  /api/v1/users:
    get:
      tags:
        - Users
      summary: "Get all users"
      responses:
        200:
          description: "Successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/User"
    
    post:
      tags:
        - Users
      summary: "Create a new user"
      parameters:
        - in: "body"
          name: "user"
          description: "User object"
          required: true
          schema:
            $ref: "#/definitions/UserInput"
      responses:
        201:
          description: "User created successfully"
          schema:
            $ref: "#/definitions/SuccessResponse"
        422:
          description: "Validation failed"
          schema:
            $ref: "#/definitions/ErrorResponse"

  /api/v1/users/{id}:
    get:
      tags:
        - Users
      summary: "Get a user by ID"
      parameters:
        - in: "path"
          name: "id"
          description: "User ID"
          required: true
          type: "string"
          format: "uuid"
      responses:
        200:
          description: "Successful operation"
          schema:
            $ref: "#/definitions/SuccessShowUser"
        404:
          description: "User not found"
          schema:
            $ref: "#/definitions/ErrorResponse"

    put:
      tags:
        - Users
      summary: "Update a user by ID"
      parameters:
        - in: "path"
          name: "id"
          description: "User ID"
          required: true
          type: "string"
          format: "uuid"
        - in: "body"
          name: "user"
          description: "Updated user object"
          required: true
          schema:
            $ref: "#/definitions/UserInput"
      responses:
        200:
          description: "User updated successfully"
          schema:
            $ref: "#/definitions/SuccessResponse"
        404:
          description: "User not found"
          schema:
            $ref: "#/definitions/ErrorResponse"
        422:
          description: "Validation failed"
          schema:
            $ref: "#/definitions/ErrorResponse"

    delete:
      tags:
        - Users
      summary: "Delete a user by ID"
      parameters:
        - in: "path"
          name: "id"
          description: "User ID"
          required: true
          type: "string"
          format: "uuid"
      responses:
        200:
          description: "User deleted successfully"
          schema:
            $ref: "#/definitions/SuccessResponse"
        404:
          description: "User not found"
          schema:
            $ref: "#/definitions/ErrorResponse"

definitions:
  User:
    type: "object"
    properties:
      id:
        type: "string"
        format: "uuid"
      full_name:
        type: "string"
      email:
        type: "string"
      roles:
        type: "string"
      status:
        type: "integer"
        format: "int64"
      provider:
        type: "string"
      company_id:
        type: "string"
        format: "uuid"
      uid:
        type: "string"
      created_at:
        type: "string"
        format: "date-time"
      modified_at:
        type: "string"
        format: "date-time"
      telefono:
        type: string
        pattern: '^\d{8}$'
      deleted_at:
        type: "string"
        format: "date-time"
        default: null

  UserInput:
    type: "object"
    properties:
      full_name:
        type: "string"
      email:
        type: "string"
      roles:
        type: "string"
      status:
        type: "integer"
        format: "int64"
        default: 1
      company_id:
        type: "string"
        format: "uuid"

  ErrorResponse:
    type: "object"
    properties:
      success:
        type: "boolean"
        default: false
      message:
        type: "string"
  
  SuccessResponse:
    type: "object"
    properties:
      success:
        type: "boolean"
      message:
        type: "string"
  
  SuccessShowUser:
    type: "object"
    properties:
      result:
        $ref: "#/definitions/User"
      success:
        type: "boolean"
      message:
        type: "string"

