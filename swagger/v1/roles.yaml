swagger: '2.0'
info:
  version: 1.0.0
  title: Roles API
  description: "API for managing roles"
paths:
  /api/v1/roles:
    get:
      tags:
        - Roles
      summary: Get all roles
      responses:
        '200':
          description: Successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/Role'
    post:
      tags:
        - Roles
      summary: Create a role
      parameters:
        - in: body
          name: role
          description: Role object to create
          required: true
          schema:
            $ref: '#/definitions/RoleInput'
      responses:
        '201':
          description: Role created successfully
          schema:
            $ref: '#/definitions/SuccessResponse'
        '422':
          description: Unprocessable entity
          schema:
            $ref: '#/definitions/ErrorResponse'
          
  /api/v1/roles/{id}:
    get:
      tags:
        - Roles
      summary: Get a role by ID
      parameters:
        - name: id
          in: path
          description: ID of the role to retrieve
          required: true
          type: string
          format: uuid
      responses:
        '200':
          description: Successful operation
          schema:
            $ref: '#/definitions/SuccessShowRole'
        '404':
          description: Role not found
          schema:
            $ref: '#/definitions/ErrorResponse'
    put:
      tags:
        - Roles
      summary: Update a role
      parameters:
        - name: id
          in: path
          description: ID of the role to update
          required: true
          type: string
          format: uuid
        - in: body
          name: role
          description: Role object to update
          required: true
          schema:
            $ref: '#/definitions/RoleInput'
      responses:
        '200':
          description: Successful operation
          schema:
            $ref: '#/definitions/SuccessResponse'
        '404':
          description: Role not found
          schema:
            $ref: '#/definitions/ErrorResponse'
        '422':
          description: "Validation failed"
          schema:
            $ref: "#/definitions/ErrorResponse"
    delete:
      tags:
        - Roles
      summary: Delete a role
      parameters:
        - name: id
          in: path
          description: ID of the role to delete
          required: true
          type: string
          format: uuid
      responses:
        '200':
          description: Successful operation
          schema:
            $ref: '#/definitions/SuccessResponse'
        '404':
          description: Role not found
          schema:
            $ref: '#/definitions/ErrorResponse'
  /api/v1/roles/{id}/users:
    get:
      tags:
        - Roles
      summary: Get users added to role by ID
      parameters:
        - name: id
          in: path
          description: ID of the role to retrieve
          required: true
          type: string
          format: uuid
      responses:
        '200':
          description: Successful operation
          schema:
            $ref: '#/definitions/SuccessShowUsers'
        '404':
          description: Role not found
          schema:
            $ref: '#/definitions/ErrorResponse'
  /api/v1/roles/{id}/users/add:
    post:
      tags:
        - Roles
      summary: Add a user to role
      parameters:
        - name: id
          in: path
          description: ID of the role to add user
          required: true
          type: string
          format: uuid
        - in: body
          name: user
          description: User Id to add
          required: true
          schema:
            $ref: '#/definitions/UserIdInput'
      responses:
        '201':
          description: Role created successfully
          schema:
            $ref: '#/definitions/SuccessResponse'
        '422':
          description: Unprocessable entity
          schema:
            $ref: '#/definitions/ErrorResponse'
definitions:
  Role:
    type: object
    properties:
      id:
        type: string
        format: uuid
      name:
        type: string
      description:
        type: string
      created_at:
        type: "string"
        format: "date-time"
      modified_at:
        type: "string"
        format: "date-time"
      deleted_at:
        type: "string"
        format: "date-time"
        default: null

  RoleInput:
    type: object
    properties:
      name:
        type: string
      description:
        type: string
  UserIdInput:
    type: object
    properties:
      userId:
        type: string
        format: uuid
   
  ErrorResponse:
    type: "object"
    properties:
      success:
        type: "boolean"
        default: false
      message:
        type: "string"
  
  SuccessResponse:
    type: "object"
    properties:
      success:
        type: "boolean"
      message:
        type: "string"
  
  SuccessShowRole:
    type: "object"
    properties:
      result:
        $ref: "#/definitions/Role"
      success:
        type: "boolean"
      message:
        type: "string"
  
  User:
    type: "object"
    properties:
      id:
        type: string
        format: uuid
      full_name:
        type: string
      email:
        type: string
  SuccessShowUsers:
    type: "object"
    properties:
      result:
        type: array
        items:
          $ref: "#/definitions/User"
      success:
        type: "boolean"
      message:
        type: "string"
